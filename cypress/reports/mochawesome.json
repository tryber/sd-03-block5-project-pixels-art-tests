{
  "stats": {
    "suites": 1,
    "tests": 13,
    "passes": 13,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-19T13:27:24.255Z",
    "end": "2020-02-19T13:27:48.456Z",
    "duration": 24201,
    "testsRegistered": 13,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "51c9139d-2b4c-495d-996c-8f29e60a025b",
      "title": "",
      "fullFile": "cypress/integration/project.spec.js",
      "file": "cypress/integration/project.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
          "title": "Pixel Art Project",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "A página deve possuir o título \"Paleta de Cores\"",
              "fullTitle": "Pixel Art Project A página deve possuir o título \"Paleta de Cores\"",
              "timedOut": null,
              "duration": 373,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('h1#title').should('have.text', 'Paleta de Cores');",
              "err": {},
              "uuid": "a5615597-0955-4de8-b78b-22ae27dce9fa",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A página deve possuir uma paleta de quatro cores",
              "fullTitle": "Pixel Art Project A página deve possuir uma paleta de quatro cores",
              "timedOut": null,
              "duration": 203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  expect(color).not.to.have.css('background-color', WHITE);\n  expect(color).to.have.css('border', '1px solid rgb(0, 0, 0)');\n  expect(color).to.have[\"class\"]('color');\n}).then(function (colors) {\n  expect(colors).to.have.length(4);\n}).then(function (colors) {\n  for (var index = 1; index < colors.length; index += 1) {\n    var current = colors[index];\n    var previous = colors[index - 1];\n    expect(current).to.be.onTheRightOf(previous);\n    expect(current).to.be.horizontallyAlignedWith(previous);\n  }\n});",
              "err": {},
              "uuid": "2dec8115-c0eb-4941-9d3e-dc29b8dfcf4c",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "É obrigatória a presença da cor preta na paleta",
              "fullTitle": "Pixel Art Project É obrigatória a presença da cor preta na paleta",
              "timedOut": null,
              "duration": 176,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.css', 'background-color', BLACK);",
              "err": {},
              "uuid": "62dd0d63-5e15-4767-9079-3e260077dc32",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "A página deve possuir um quadro de pixels, com 25 pixels",
              "fullTitle": "Pixel Art Project A página deve possuir um quadro de pixels, com 25 pixels",
              "timedOut": null,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').should('have.length', 25).each(function (pixel) {\n  expect(pixel).to.have.css('background-color', WHITE);\n}); // .then((colors) => {\n//   const chunks = chunk(colors, 5);\n//   debugger\n// });",
              "err": {},
              "uuid": "756d899e-4add-45de-b789-7b2707e28cf5",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "O quadro de pixels deve aparecer abaixo da paleta de cores",
              "fullTitle": "Pixel Art Project O quadro de pixels deve aparecer abaixo da paleta de cores",
              "timedOut": null,
              "duration": 178,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('#pixel-board').then(function (pixelBoard) {\n  cy.get('#color-palette').should(function (colorPalette) {\n    expect(pixelBoard).to.be.belowOf(colorPalette);\n  });\n});",
              "err": {},
              "uuid": "3246930f-3fc0-464b-9a00-4c1d1cb8ca50",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cada pixel do quadro de pixels deve possuir 40 pixels de largura e 40 pixels de altura e ser delimitado por uma margem preta de 1 pixel",
              "fullTitle": "Pixel Art Project Cada pixel do quadro de pixels deve possuir 40 pixels de largura e 40 pixels de altura e ser delimitado por uma margem preta de 1 pixel",
              "timedOut": null,
              "duration": 435,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.pixel').each(function (pixel) {\n  expect(pixel).to.have.css('height', '40px');\n  expect(pixel).to.have.css('width', '40px');\n  expect(pixel).to.have.css('border', '1px solid rgb(0, 0, 0)');\n});",
              "err": {},
              "uuid": "1b74cceb-9b49-4cb2-8b0d-fe74693231b1",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao carregar a página, a cor preta da paleta já deve estar selecionada para pintar os pixels",
              "fullTitle": "Pixel Art Project Ao carregar a página, a cor preta da paleta já deve estar selecionada para pintar os pixels",
              "timedOut": null,
              "duration": 144,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').first().should('have.class', 'selected');",
              "err": {},
              "uuid": "44815c5e-45b6-45b5-8395-4914194a87ec",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao clicar em uma das cores da paleta, a cor selecionada na paleta é que vai ser usada para preencher os pixels",
              "fullTitle": "Pixel Art Project Ao clicar em uma das cores da paleta, a cor selecionada na paleta é que vai ser usada para preencher os pixels",
              "timedOut": null,
              "duration": 532,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var _loop = function _loop(colorIndex) {\n  cy.get('.color').eq(colorIndex).click();\n  cy.get('.color').each(function (color, index) {\n    if (index === colorIndex) {\n      expect(color).to.have[\"class\"]('selected');\n    } else {\n      expect(color).not.to.have[\"class\"]('selected');\n    }\n  });\n};\nfor (var colorIndex = 0; colorIndex < 4; colorIndex += 1) {\n  _loop(colorIndex);\n}",
              "err": {},
              "uuid": "b7639eb3-b3e4-4fda-a259-4496938b72a1",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao clicar em um pixel com uma cor selecionada, o pixel deve ser preenchido com esta cor",
              "fullTitle": "Pixel Art Project Ao clicar em um pixel com uma cor selecionada, o pixel deve ser preenchido com esta cor",
              "timedOut": null,
              "duration": 8655,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').each(function (color) {\n  var backgroundColor = color.css('background-color');\n  cy.wrap(color).click();\n  cy.get('.pixel').each(function (pixel) {\n    cy.wrap(pixel).click().should('have.css', 'background-color', backgroundColor);\n  });\n});",
              "err": {},
              "uuid": "706a2b64-2489-4121-a346-081b3ec2c203",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Ao clicar em um pixel com uma cor selecionada, somente esse pixel deverá ser preenchido, sem influenciar na cor dos demais pixels",
              "fullTitle": "Pixel Art Project Ao clicar em um pixel com uma cor selecionada, somente esse pixel deverá ser preenchido, sem influenciar na cor dos demais pixels",
              "timedOut": null,
              "duration": 2004,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var colorToPixelIndex = {\n  0: 6,\n  1: 8,\n  2: 16,\n  3: 18\n}; // For each color in the palette\ncy.get('.color').each(function (color, index) {\n  // first click on a color\n  cy.wrap(color).click();\n  var backgroundColor = color.css('background-color');\n  var clickedPixelIndex = colorToPixelIndex[index]; // then we check that, when a pixel is clicked, it shouldn't affect\n  cy.get('.pixel').eq(clickedPixelIndex).click(); // the pixels in the left and right,\n  cy.get('.pixel').eq(clickedPixelIndex - 1).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 1).should('not.have.css', 'background-color', backgroundColor); // the pixels above and below\n  cy.get('.pixel').eq(clickedPixelIndex - 5).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 5).should('not.have.css', 'background-color', backgroundColor); // nor the pixels in its diagonal directions\n  cy.get('.pixel').eq(clickedPixelIndex - 6).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex - 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 4).should('not.have.css', 'background-color', backgroundColor);\n  cy.get('.pixel').eq(clickedPixelIndex + 6).should('not.have.css', 'background-color', backgroundColor);\n});",
              "err": {},
              "uuid": "d5523a8b-f1f0-49a1-ad20-d21d1c5fb900",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Crie um botão que, ao ser clicado, limpa o quadro, preenchendo a cor de todos seus pixels com branco",
              "fullTitle": "Pixel Art Project Crie um botão que, ao ser clicado, limpa o quadro, preenchendo a cor de todos seus pixels com branco",
              "timedOut": null,
              "duration": 2440,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// select the second color in the palette\ncy.get('.color').eq(1).click(); // fill in every pixel in the board with the selected color\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).click();\n}); // click the clear board button\ncy.get('#clear-board').click(); // check that all pixels have white background color\ncy.get('.pixel').each(function (pixel) {\n  cy.wrap(pixel).should('have.css', 'background-color', WHITE);\n});",
              "err": {},
              "uuid": "99d4e3b9-af1f-488d-a36c-d697e3e53f60",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Faça o quadro de pixels ter seu tamanho definido pelo usuário",
              "fullTitle": "Pixel Art Project Faça o quadro de pixels ter seu tamanho definido pelo usuário",
              "timedOut": null,
              "duration": 7737,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// initial board size must be 5\ncy.get('.pixel').should('have.length', 25); // change the board size to 10\ncy.get('#board-size').clear().type(10);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 100); // when the board size is less then 5,\n// it should generate a board of size 5 \ncy.get('#board-size').clear().type(4);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 25); // change the board size to 50\ncy.get('#board-size').clear().type(50);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500); // when the board size is greater than 50\n// it should generate a board of size 50\ncy.get('#board-size').clear().type(51);\ncy.get('#generate-board').click();\ncy.get('.pixel').should('have.length', 2500);",
              "err": {},
              "uuid": "ff1d7915-707f-4f62-8313-ab0767e40a99",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página",
              "fullTitle": "Pixel Art Project Faça com que as cores da paleta sejam geradas aleatoriamente ao carregar a página",
              "timedOut": null,
              "duration": 704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.get('.color').then(function (colors) {\n  var currentColors, previousColors; // get the palette's initial colors\n  previousColors = Array.from(colors).map(function (color) {\n    return Cypress.$(color).css('background-color');\n  }); // reload the page 5 times and check that the colors change each time\n  for (var i = 0; i < 5; i += 1) {\n    cy.reload();\n    cy.get('.color').then(function (colors) {\n      var currentColors = Array.from(colors).map(function (color) {\n        return Cypress.$(color).css('background-color');\n      });\n      expect(currentColors).not.to.deep.equal(previousColors);\n      previousColors = currentColors;\n    });\n  }\n});",
              "err": {},
              "uuid": "9ece5356-8496-4350-89ba-6f9ad79c8596",
              "parentUUID": "4fef4e79-ca26-46fa-ba36-8e0c5f32fc45",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a5615597-0955-4de8-b78b-22ae27dce9fa",
            "2dec8115-c0eb-4941-9d3e-dc29b8dfcf4c",
            "62dd0d63-5e15-4767-9079-3e260077dc32",
            "756d899e-4add-45de-b789-7b2707e28cf5",
            "3246930f-3fc0-464b-9a00-4c1d1cb8ca50",
            "1b74cceb-9b49-4cb2-8b0d-fe74693231b1",
            "44815c5e-45b6-45b5-8395-4914194a87ec",
            "b7639eb3-b3e4-4fda-a259-4496938b72a1",
            "706a2b64-2489-4121-a346-081b3ec2c203",
            "d5523a8b-f1f0-49a1-ad20-d21d1c5fb900",
            "99d4e3b9-af1f-488d-a36c-d697e3e53f60",
            "ff1d7915-707f-4f62-8313-ab0767e40a99",
            "9ece5356-8496-4350-89ba-6f9ad79c8596"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23869,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false
      },
      "version": "4.1.0"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports",
        "overwrite": true,
        "html": false,
        "json": true
      },
      "version": "4.1.0"
    }
  }
}